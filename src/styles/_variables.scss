@use "sass:math";
@use "sass:color";
@use "sass:map";

/*
Colours
*/

//From https://sparagino.it/2020/06/09/sass-only-material-angular-palette-generator/
@function multiply($rgb1, $rgb2) {
    $r: math.floor(math.div(red($rgb1) * red($rgb2), 255));
    $g: math.floor(math.div(green($rgb1) * green($rgb2), 255));
    $b: math.floor(math.div(blue($rgb1) * blue($rgb2), 255));
    @return rgb($r, $g, $b);
}

//From https://coolors.co/
$black: #0c0c0c;
$purple: #665aaa;
$pink: #ff70a6;
$navy: #5a7baa;
$blue: #3cf;
$yellow: #fce354;
$green: #1ee592;
$brand: #f04c53;
$orange: #ff8f00;
$white: #fff;

$colours: ("black": $black,
    "purple": $purple,
    "pink": $pink,
    "blue": $blue,
    "yellow": $yellow,
    "green": $green,
    "brand": $brand,
    "orange": $orange,
);

//Generates colour array
$white-pure: #fff;
$black-pure: #000;

$colour-key: (25: 8%,
    50: 12%,
    100: 30%,
    200: 50%,
    300: 70%,
    400: 85%,
    500: 100%,
    600: 87%,
    700: 70%,
    800: 54%,
    900: 25%,
    1000: 8.5%,
);

@function col($colour, $multiply: 500) {
    $baseDark: multiply($colour, $colour);

    @if $multiply <=500 {
        @return color.mix($colour,
            $white-pure,
            map.get($colour-key, $multiply));
    }

    @else {
        @return color.mix($colour, $baseDark, map.get($colour-key, $multiply));
    }
}

/*
Spacing
*/

//Sets base value for spacing
$space-unit: 1rem;

$space-def: ( // extra small
    "xxxs": 0.1,
    "xxs": 0.25,
    "xs": 0.5,
    //small
    "sm": 1,
    //medium
    "md": 1.5,
    //large
    "lg": 2,
    //extra large
    "xl": 2.5,
    "xxl": 3,
    "xxxl": 3.5,
    "xxxxl": 4);

@function space($level, $multiply: 1) {
    @return $multiply * map.get($space-def, $level) * $space-unit;
}

/*
Breakpoints
*/

$breakpoints: ( //32
    "xs": space("xxxxl", 8),
    //48
    "sm": space("xxxxl", 12),
    //64
    "md": space("xxxxl", 16));

//https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
//https://medium.com/codyhouse/create-your-design-system-part-4-spacing-895c9213e2b9/
@mixin breakpoint($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (max-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }

    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        +"Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

/*
Transition
*/

$transition-fast: 0.1s ease-in-out;
$transition-medium: 0.2s ease-in-out;
$transition-slow: 0.4s ease-in-out;

/*
Border
*/

$border-radius-s: 2px;
$border-radius-m: 4px;
$border-radius-l: 8px;

/*
Font 
*/

/* https://medium.com/codyhouse/create-your-design-system-part-1-typography-7c630d9092bd */
/* https://codyhouse.co/ds/docs/framework/typography */
$font: "Poppins",
Helvetica,
Arial,
sans-serif;
$text: $black;
$inverse: $white-pure;
$base-size: 1em;
$base-weight: 400;
$heading-weight: 600;

/* Creates Text Size */
$text-xs: #{$base-size * 0.75};
$text-sm: #{$base-size};
$text-md: #{$base-size * 1.25};
$text-lg: #{$base-size * 1.5};
$text-xl: #{$base-size * 1.75};
$text-xxl: #{$base-size * 2};

/* Creates Line Size */
$line-sm: calc(1ex / 0.42);
$line-md: calc(1ex / 0.48);
$line-lg: calc(1ex / 0.52);